// Code generated by github.com/CovenantSQL/HashStablePack DO NOT EDIT.
import * as hspEncoder from 'hsp-encoder'

// PersonMarshalHash function
export function PersonMarshalHash(z) {
	let binary = []

	// map header, size 4
	binary.push(0x84,)

	// encode z.TestArray with type Bytes
	binary.push(hspEncoder.appendBytes(z.TestArray))
	// encode imported type
	if oTemp, err := z.Producer.MarshalHash(); err != nil {
		return nil, err
	} else {
		o = hsp.AppendBytes(o, oTemp)
	}
	// encode z.Name with type String
	binary.push(hspEncoder.appendString(z.Name))

	// encode z.Timestamp with type Time
	binary.push(hspEncoder.appendTime(z.Timestamp))

	const hash = new Uint8Array(b)
	return hash
}

// PersonMsgsize function
export function PersonMsgSize(z) {
	let size = 0
	size = 1 + 10 + hspEncoder.typeSizes.BytesPrefixSize + z.TestArray.length + 9 + z.Producer.Msgsize() + 5 + hspEncoder.typeSizes.StringPrefixSize + z.Name.length + 10 + hspEncoder.typeSizes.TimeSize
	return size
}